version: 2.0.{build}

install:
- ps: >-
    # Download the CoApp tools.

    $msiPath = "$($env:USERPROFILE)\CoApp.Tools.Powershell.msi"

    (New-Object Net.WebClient).DownloadFile('http://coapp.org/files/CoApp.Tools.Powershell.msi', $msiPath)


    # Install the CoApp tools from the downloaded .msi.

    Start-Process -FilePath msiexec -ArgumentList /i, $msiPath, /quiet -Wait


    # Make the tools available for later PS scripts to use.

    $env:PSModulePath = $env:PSModulePath + ';C:\Program Files (x86)\Outercurve Foundation\Modules'

    Import-Module CoApp

nuget:
  disable_publish_on_pr: true

build_script:
- cmd: >-
    @echo off

    "%VS140COMNTOOLS%\VsMSBuildCmd.bat" && ^

    appveyor-retry nuget restore win32\libgamecommon.sln && ^

    msbuild win32\libgamecommon\libgamecommon.vcxproj /p:Configuration=Debug /p:Platform=x86 /p:SolutionDir=..\ /v:minimal /nologo && ^

    msbuild win32\libgamecommon\libgamecommon.vcxproj /p:Configuration=Release /p:Platform=x86 /p:SolutionDir=..\ /v:minimal /nologo && ^

    msbuild win32\libgamecommon\libgamecommon.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:SolutionDir=..\ /v:minimal /nologo && ^

    msbuild win32\libgamecommon\libgamecommon.vcxproj /p:Configuration=Release /p:Platform=x64 /p:SolutionDir=..\ /v:minimal /nologo && ^

    msbuild win32\libgamecommon-tests\libgamecommon-tests.vcxproj /p:Configuration=Debug /p:Platform=x86 /p:SolutionDir=..\ /v:minimal /nologo && ^

    msbuild win32\libgamecommon-tests\libgamecommon-tests.vcxproj /p:Configuration=Release /p:Platform=x86 /p:SolutionDir=..\ /v:minimal /nologo && ^

    msbuild win32\libgamecommon-tests\libgamecommon-tests.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:SolutionDir=..\ /v:minimal /nologo && ^

    msbuild win32\libgamecommon-tests\libgamecommon-tests.vcxproj /p:Configuration=Release /p:Platform=x64 /p:SolutionDir=..\ /v:minimal /nologo

before_deploy:
- ps: >-
    # This is the CoApp .autopkg file to create.

    $autopkgFile = "win32\libgamecommon\libgamecommon.autopkg"


    # Get the ".autopkg.template" file, replace "@version" with the Appveyor version number, then save to the ".autopkg" file.

    cat ($autopkgFile + ".template") | % { $_ -replace "@version", $env:appveyor_build_version } > $autopkgFile


    # Use the CoApp tools to create NuGet native packages from the .autopkg.

    Write-NuGetPackage $autopkgFile


    # Push all newly created .nupkg files as Appveyor artifacts for later deployment.

    Get-ChildItem .\*.nupkg | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }

deploy:
- provider: NuGet
  api_key:
    secure: 9Rk3FyZ1qSjw0eyhiyhsfyOpir/jfoV6t1IkPA4L3VA/fLPMpmNdjOxDaniqoDxL
  artifact: /.*\.nupkg/
  on:
    branch: master
